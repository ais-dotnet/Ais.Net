// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.6.0.0
//      SpecFlow Generator Version:3.6.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Ais.Net.Specs.AisMessageTypes
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.6.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("StaticDataReportParserSpecs")]
    public partial class StaticDataReportParserSpecsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "StaticDataReportParserSpecs.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Ais/Net/Specs/AisMessageTypes", "StaticDataReportParserSpecs", "    In order process AIS messages from an nm4 file\r\n    As a developer\r\n    I wan" +
                    "t the NmeaAisStaticDataReportParser to be able to parse the payload section of m" +
                    "essage type 24: Static Data Report", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Message Part")]
        [NUnit.Framework.TestCaseAttribute("H00000000000000000000000000", "2", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H000000000000000000000000000", "0", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000000", "0", "1", null)]
        [NUnit.Framework.TestCaseAttribute("H000008000000000000000000000", "0", "2", null)]
        [NUnit.Framework.TestCaseAttribute("H00000<000000000000000000000", "0", "3", null)]
        [NUnit.Framework.TestCaseAttribute("H3mhO30PDT@V04pU@4000000000", "2", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H3m<KD4NC=D5l@<<:F;000204240", "0", "1", null)]
        public virtual void MessagePart(string payload, string padding, string partNumber, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            argumentsOfScenario.Add("partNumber", partNumber);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Message Part", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 24
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 25
    testRunner.When(string.Format("I inspect the Static Data Report part of \'{0}\' with padding {1}", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 26
    testRunner.Then(string.Format("NmeaAisStaticDataReportParser.GetPartNumber returns {0}", partNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Read Part A as Part B throws")]
        public virtual void ReadPartAAsPartBThrows()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Read Part A as Part B throws", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 38
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 40
    testRunner.When("I parse \'H3mhO30PDT@V04pU@4000000000\' with padding 2 as Static Data Report Part B" +
                        " catching exception", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 41
    testRunner.Then("the constructor throws ArgumentException", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Read Part B as Part A throws")]
        public virtual void ReadPartBAsPartAThrows()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Read Part B as Part A throws", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 43
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 45
    testRunner.When("I parse \'H3m<KD4NC=D5l@<<:F;000204240\' with padding 0 as Static Data Report Part " +
                        "A catching exception", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 46
    testRunner.Then("the constructor throws ArgumentException", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part A: Message Type")]
        [NUnit.Framework.TestCaseAttribute("H00000000000000000000000000", "2", null)]
        [NUnit.Framework.TestCaseAttribute("H000000000000000000000000000", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H3mhO30PDT@V04pU@4000000000", "2", null)]
        public virtual void PartAMessageType(string payload, string padding, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part A: Message Type", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 48
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 49
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part A", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 50
    testRunner.Then("NmeaAisStaticDataReportParserPartA.Type is 24", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 51
    testRunner.And("NmeaAisStaticDataReportParserPartA.PartNumber is 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part B: Message Type")]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000000", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H3m<KD4NC=D5l@<<:F;000204240", "0", null)]
        public virtual void PartBMessageType(string payload, string padding, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part B: Message Type", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 59
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 60
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part B", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 61
    testRunner.Then("NmeaAisStaticDataReportParserPartB.Type is 24", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 62
    testRunner.And("NmeaAisStaticDataReportParserPartB.PartNumber is 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part A: Repeat Indicator")]
        [NUnit.Framework.TestCaseAttribute("H00000000000000000000000000", "2", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H000000000000000000000000000", "0", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H@0000000000000000000000000", "2", "1", null)]
        [NUnit.Framework.TestCaseAttribute("H@00000000000000000000000000", "0", "1", null)]
        [NUnit.Framework.TestCaseAttribute("HP0000000000000000000000000", "2", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Hh0000000000000000000000000", "2", "3", null)]
        [NUnit.Framework.TestCaseAttribute("H3mhO30PDT@V04pU@4000000000", "2", "0", null)]
        public virtual void PartARepeatIndicator(string payload, string padding, string repeatCount, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            argumentsOfScenario.Add("repeatCount", repeatCount);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part A: Repeat Indicator", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 70
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 71
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part A", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 72
    testRunner.Then(string.Format("NmeaAisStaticDataReportParserPartA.RepeatIndicator is {0}", repeatCount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part B: Repeat Indicator")]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000000", "0", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H@00004000000000000000000000", "0", "1", null)]
        [NUnit.Framework.TestCaseAttribute("HP00004000000000000000000000", "0", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Hh00004000000000000000000000", "0", "3", null)]
        [NUnit.Framework.TestCaseAttribute("H3m<KD4NC=D5l@<<:F;000204240", "0", "0", null)]
        public virtual void PartBRepeatIndicator(string payload, string padding, string repeatCount, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            argumentsOfScenario.Add("repeatCount", repeatCount);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part B: Repeat Indicator", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 84
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 85
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part B", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 86
    testRunner.Then(string.Format("NmeaAisStaticDataReportParserPartB.RepeatIndicator is {0}", repeatCount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part A: MMSI")]
        [NUnit.Framework.TestCaseAttribute("H00000000000000000000000000", "2", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H00000@00000000000000000000", "2", "1", null)]
        [NUnit.Framework.TestCaseAttribute("H00000P00000000000000000000", "2", "2", null)]
        [NUnit.Framework.TestCaseAttribute("H>eq`d@00000000000000000000", "2", "987654321", null)]
        [NUnit.Framework.TestCaseAttribute("H3mhO30PDT@V04pU@4000000000", "2", "257695500", null)]
        [NUnit.Framework.TestCaseAttribute("H3m8;Q1A8Tt0000000000000000", "2", "257035140", null)]
        public virtual void PartAMMSI(string payload, string padding, string mmsi, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            argumentsOfScenario.Add("mmsi", mmsi);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part A: MMSI", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 96
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 97
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part A", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 98
    testRunner.Then(string.Format("NmeaAisStaticDataReportParserPartA.Mmsi is {0}", mmsi), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part B: MMSI")]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000000", "0", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H00000D000000000000000000000", "0", "1", null)]
        [NUnit.Framework.TestCaseAttribute("H00000T000000000000000000000", "0", "2", null)]
        [NUnit.Framework.TestCaseAttribute("H3m<KD4NC=D5l@<<:F;000204240", "0", "257104720", null)]
        [NUnit.Framework.TestCaseAttribute("H3m76H4N@B?>1F0<;mnoh0107320", "0", "257017440", null)]
        public virtual void PartBMMSI(string payload, string padding, string mmsi, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            argumentsOfScenario.Add("mmsi", mmsi);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part B: MMSI", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 109
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 110
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part B", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 111
    testRunner.Then(string.Format("NmeaAisStaticDataReportParserPartB.Mmsi is {0}", mmsi), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part A: Name")]
        [NUnit.Framework.TestCaseAttribute("H00000000000000000000000000", "2", "@@@@@@@@@@@@@@@@@@@@", null)]
        [NUnit.Framework.TestCaseAttribute("H00000100000000000000000000", "2", "P@@@@@@@@@@@@@@@@@@@", null)]
        [NUnit.Framework.TestCaseAttribute("H00000300000000000000000000", "2", "0@@@@@@@@@@@@@@@@@@@", null)]
        [NUnit.Framework.TestCaseAttribute("H00000000000000000000000010", "2", "@@@@@@@@@@@@@@@@@@@P", null)]
        [NUnit.Framework.TestCaseAttribute("H00000000000000000000000004", "2", "@@@@@@@@@@@@@@@@@@@A", null)]
        [NUnit.Framework.TestCaseAttribute("H3mhO30PDT@V04pU@4000000000", "2", "HEIDI ANITA@@@@@@@@@", null)]
        [NUnit.Framework.TestCaseAttribute("H3m8;Q1A8Tt0000000000000000", "2", "TRIO@@@@@@@@@@@@@@@@", null)]
        public virtual void PartAName(string payload, string padding, string vesselName, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            argumentsOfScenario.Add("vesselName", vesselName);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part A: Name", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 122
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 123
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part A", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 124
    testRunner.Then(string.Format("NmeaAisStaticDataReportParserPartA.VesselName is {0}", vesselName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part A: Spare")]
        [NUnit.Framework.TestCaseAttribute("H00000000000000000000000000", "2", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H000000000000000000000000000", "0", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H000000000000000000000000001", "0", "1", null)]
        [NUnit.Framework.TestCaseAttribute("H00000000000000000000000000w", "0", "63", null)]
        [NUnit.Framework.TestCaseAttribute("H000000000000000000000000010", "0", "64", null)]
        [NUnit.Framework.TestCaseAttribute("H000000000000000000000000020", "0", "128", null)]
        [NUnit.Framework.TestCaseAttribute("H00000000000000000000000003w", "0", "255", null)]
        public virtual void PartASpare(string payload, string padding, string spare, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            argumentsOfScenario.Add("spare", spare);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part A: Spare", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 136
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 137
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part A", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 138
    testRunner.Then(string.Format("NmeaAisStaticDataReportParserPartA.Spare is {0}", spare), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part B: Ship Type")]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000000", "0", "NotAvailable", null)]
        [NUnit.Framework.TestCaseAttribute("H000004E00000000000000000000", "0", "WingInGroundHazardousCategoryA", null)]
        [NUnit.Framework.TestCaseAttribute("H3m<KD4NC=D5l@<<:F;000204240", "0", "Fishing", null)]
        [NUnit.Framework.TestCaseAttribute("H3n0Vd561=30000<7qploP1@4430", "0", "CargoAll", null)]
        [NUnit.Framework.TestCaseAttribute("H3uG2nTUCBD5l0Q00000001@4210", "0", "PleasureCraft", null)]
        public virtual void PartBShipType(string payload, string padding, string type, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            argumentsOfScenario.Add("type", type);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part B: Ship Type", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 152
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 153
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part B", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 154
    testRunner.Then(string.Format("NmeaAisStaticDataReportParserPartB.ShipType is {0}", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part B: Vendor ID ITU-R 1371-3")]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000000", "0", "@@@@@@@", null)]
        [NUnit.Framework.TestCaseAttribute("H0000040Q0000000000000000000", "0", "!@@@@@@", null)]
        [NUnit.Framework.TestCaseAttribute("H0000040QPPPPPP0000000000000", "0", "!", null)]
        [NUnit.Framework.TestCaseAttribute("H000004012345670000000000000", "0", "ABCDEFG", null)]
        [NUnit.Framework.TestCaseAttribute("H3m<KD4NC=D5l@<<:F;000204240", "0", "SMTE4PL", null)]
        [NUnit.Framework.TestCaseAttribute("H3n0Vd561=30000<7qploP1@4430", "0", "AMC@@@@", null)]
        public virtual void PartBVendorIDITU_R1371_3(string payload, string padding, string vendorId, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            argumentsOfScenario.Add("vendorId", vendorId);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part B: Vendor ID ITU-R 1371-3", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 164
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 165
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part B", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 166
    testRunner.Then(string.Format("NmeaAisStaticDataReportParserPartB.VendorIdRev3 is {0}", vendorId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part B: Vendor ID ITU-R 1371-4")]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000000", "0", "@@@", null)]
        [NUnit.Framework.TestCaseAttribute("H0000040Q0000000000000000000", "0", "!@@", null)]
        [NUnit.Framework.TestCaseAttribute("H0000040QPP00000000000000000", "0", "!", null)]
        [NUnit.Framework.TestCaseAttribute("H000004012300000000000000000", "0", "ABC", null)]
        [NUnit.Framework.TestCaseAttribute("H3m<KD4NC=D5l@<<:F;000204240", "0", "SMT", null)]
        [NUnit.Framework.TestCaseAttribute("H3n0Vd561=30000<7qploP1@4430", "0", "AMC", null)]
        public virtual void PartBVendorIDITU_R1371_4(string payload, string padding, string vendorId, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            argumentsOfScenario.Add("vendorId", vendorId);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part B: Vendor ID ITU-R 1371-4", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 177
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 178
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part B", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 179
    testRunner.Then(string.Format("NmeaAisStaticDataReportParserPartB.VendorIdRev4 is {0}", vendorId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part B: Unit Model Code")]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000000", "0", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H000004000040000000000000000", "0", "1", null)]
        [NUnit.Framework.TestCaseAttribute("H000004000080000000000000000", "0", "2", null)]
        [NUnit.Framework.TestCaseAttribute("H0000040000<0000000000000000", "0", "3", null)]
        [NUnit.Framework.TestCaseAttribute("H0000040000P0000000000000000", "0", "8", null)]
        [NUnit.Framework.TestCaseAttribute("H0000040000t0000000000000000", "0", "15", null)]
        public virtual void PartBUnitModelCode(string payload, string padding, string unitModelCode, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            argumentsOfScenario.Add("unitModelCode", unitModelCode);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part B: Unit Model Code", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 190
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 191
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part B", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 192
    testRunner.Then(string.Format("NmeaAisStaticDataReportParserPartB.UnitModelCode is {0}", unitModelCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part B: Serial Number")]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000000", "0", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H000004000020000000000000000", "0", "524288", null)]
        [NUnit.Framework.TestCaseAttribute("H000004000000010000000000000", "0", "1", null)]
        [NUnit.Framework.TestCaseAttribute("H000004000000020000000000000", "0", "2", null)]
        [NUnit.Framework.TestCaseAttribute("H00000400003www0000000000000", "0", "1048575", null)]
        public virtual void PartBSerialNumber(string payload, string padding, string serialNumber, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            argumentsOfScenario.Add("serialNumber", serialNumber);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part B: Serial Number", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 203
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 204
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part B", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 205
    testRunner.Then(string.Format("NmeaAisStaticDataReportParserPartB.SerialNumber is {0}", serialNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part B: Call Sign")]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000000", "0", "@@@@@@@", null)]
        [NUnit.Framework.TestCaseAttribute("H00000400000000Q000000000000", "0", "!@@@@@@", null)]
        [NUnit.Framework.TestCaseAttribute("H00000400000000QPPPPPP000000", "0", "!", null)]
        [NUnit.Framework.TestCaseAttribute("H000004000000001234567000000", "0", "ABCDEFG", null)]
        [NUnit.Framework.TestCaseAttribute("H3m<KD4NC=D5l@<<:F;000204240", "0", "LJVK@@@", null)]
        [NUnit.Framework.TestCaseAttribute("H3n0Vd561=30000<7qploP1@4430", "0", "LG9847", null)]
        public virtual void PartBCallSign(string payload, string padding, string callSign, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            argumentsOfScenario.Add("callSign", callSign);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part B: Call Sign", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 215
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 216
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part B", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 217
    testRunner.Then(string.Format("NmeaAisStaticDataReportParserPartB.CallSign is {0}", callSign), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part B: Dimension to Bow")]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000000", "0", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000080000", "0", "1", null)]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000wp0000", "0", "511", null)]
        [NUnit.Framework.TestCaseAttribute("H3m<KD4NC=D5l@<<:F;000204240", "0", "16", null)]
        [NUnit.Framework.TestCaseAttribute("H3n0Vd561=30000<7qploP1@4430", "0", "10", null)]
        public virtual void PartBDimensionToBow(string payload, string padding, string size, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            argumentsOfScenario.Add("size", size);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part B: Dimension to Bow", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 228
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 229
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part B", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 230
    testRunner.Then(string.Format("NmeaAisStaticDataReportParserPartB.DimensionToBow is {0}", size), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part B: Dimension to Stern")]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000000", "0", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000001000", "0", "1", null)]
        [NUnit.Framework.TestCaseAttribute("H00000400000000000000007w000", "0", "511", null)]
        [NUnit.Framework.TestCaseAttribute("H3m<KD4NC=D5l@<<:F;000204240", "0", "4", null)]
        [NUnit.Framework.TestCaseAttribute("H3n0Vd561=30000<7qploP1@4430", "0", "4", null)]
        public virtual void PartBDimensionToStern(string payload, string padding, string size, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            argumentsOfScenario.Add("size", size);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part B: Dimension to Stern", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 240
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 241
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part B", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 242
    testRunner.Then(string.Format("NmeaAisStaticDataReportParserPartB.DimensionToStern is {0}", size), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part B: Dimension to Port")]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000000", "0", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000100", "0", "1", null)]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000w00", "0", "63", null)]
        [NUnit.Framework.TestCaseAttribute("H3m<KD4NC=D5l@<<:F;000204240", "0", "2", null)]
        [NUnit.Framework.TestCaseAttribute("H3n0Vd561=30000<7qploP1@4430", "0", "4", null)]
        public virtual void PartBDimensionToPort(string payload, string padding, string size, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            argumentsOfScenario.Add("size", size);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part B: Dimension to Port", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 252
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 253
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part B", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 254
    testRunner.Then(string.Format("NmeaAisStaticDataReportParserPartB.DimensionToPort is {0}", size), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part B: Dimension to Starboard")]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000000", "0", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000010", "0", "1", null)]
        [NUnit.Framework.TestCaseAttribute("H0000040000000000000000000w0", "0", "63", null)]
        [NUnit.Framework.TestCaseAttribute("H3m<KD4NC=D5l@<<:F;000204240", "0", "4", null)]
        [NUnit.Framework.TestCaseAttribute("H3n0Vd561=30000<7qploP1@4430", "0", "3", null)]
        public virtual void PartBDimensionToStarboard(string payload, string padding, string size, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            argumentsOfScenario.Add("size", size);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part B: Dimension to Starboard", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 264
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 265
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part B", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 266
    testRunner.Then(string.Format("NmeaAisStaticDataReportParserPartB.DimensionToStarboard is {0}", size), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part B: Mothership MMSI")]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000000", "0", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000010", "0", "1", null)]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000roVRi0", "0", "987654321", null)]
        public virtual void PartBMothershipMMSI(string payload, string padding, string mmsi, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            argumentsOfScenario.Add("mmsi", mmsi);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part B: Mothership MMSI", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 276
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 277
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part B", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 278
    testRunner.Then(string.Format("NmeaAisStaticDataReportParserPartB.MothershipMmsi is {0}", mmsi), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Part B: Spare")]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000000", "0", "0", null)]
        [NUnit.Framework.TestCaseAttribute("H000004000000000000000000001", "0", "1", null)]
        public virtual void PartBSpare(string payload, string padding, string spare, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("payload", payload);
            argumentsOfScenario.Add("padding", padding);
            argumentsOfScenario.Add("spare", spare);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Part B: Spare", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 286
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 287
    testRunner.When(string.Format("I parse \'{0}\' with padding {1} as Static Data Report Part B", payload, padding), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 288
    testRunner.Then(string.Format("NmeaAisStaticDataReportParserPartB.Spare is {0}", spare), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
