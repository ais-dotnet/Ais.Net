trigger:
  branches:
    include:
    - master
    - feature/*
  tags:
    include:
    - '*'

resources:
  repositories:
    - repository: recommended_practices
      type: github
      name: endjin/Endjin.RecommendedPractices.AzureDevopsPipelines.GitHub
      endpoint: ais-dotnet-github

jobs:
- template: templates/build.and.release.scripted.yml@recommended_practices
  parameters:
    vmImage: 'ubuntu-latest'
    service_connection_nuget_org: $(Endjin_Service_Connection_NuGet_Org)
    service_connection_github: $(Endjin_Service_Connection_GitHub)
    solution_to_build: $(Endjin_Solution_To_Build)
    preCustomEnvironmentVariables:
    - task: UseDotNet@2
      displayName: 'Install .NET SDK 6.0'
      inputs:
        packageType: sdk
        version: 6.0.x
        installationPath: $(Agent.ToolsDirectory)/dotnet
    postSpecs:
    - task: DotNetCoreCLI@2
      displayName: 'Run benchmarks'
      inputs:
        command: 'run'
        projects: $(Build.SourcesDirectory)/Solutions/Ais.Net.Benchmarks/Ais.Net.Benchmarks.csproj
        arguments: '--configuration Release --no-build $(Build.SourcesDirectory)/Solutions/Ais.Net.Benchmarks/BenchmarkDotNet.Artifacts $(GitVersion.SemVer)'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: benchmark'
      inputs:
        artifactName: 'benchmark'
        PathtoPublish: '$(Build.SourcesDirectory)/Solutions/Ais.Net.Benchmarks/BenchmarkDotNet.Artifacts/results'
    compileTasksServiceConnection: endjin-acr-reader
    netSDKversion: '6.x'

    - bash: |
        wget -q https://github.com/dotnet/docfx/releases/download/v2.45.1/docfx.zip
        unzip docfx.zip -d docfx
        mono docfx/docfx.exe $(Build.SourcesDirectory)/Documentation/docfx.json
      displayName: "docfx build"
      failOnStderr: true
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: docsite'
      inputs:
        artifactName: 'docsite'
        PathtoPublish: '$(Build.SourcesDirectory)/Documentation/_site'

    - bash: |
        git clone https://endjin-github:$(GitHub_Pages_PAT)@github.com/ais-dotnet/Ais.Net.git --branch=gh-pages $(System.DefaultWorkingDirectory)/ghpages
        cp $(Build.SourcesDirectory)/Documentation/_site/* $(System.DefaultWorkingDirectory)/ghpages -r
        cd $(System.DefaultWorkingDirectory)/ghpages
        git config core.autocrlf false
        git config user.email GitHub@endjin.com
        git config user.name ais-dotnet
        git add *
        git commit --allow-empty -m "Documentation for $(GitVersion.PreReleaseTag)"
        git push origin gh-pages
      displayName: 'Publish documentation to GitHub Pages'
      condition: and(succeeded(), or(variables['Endjin.ForceDocPublish'], eq(variables['GitVersion.PreReleaseTag'], '')))